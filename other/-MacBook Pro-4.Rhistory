z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 840 + sigma_sq_2 / 2763)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 840)
sample2 <- sample(FebSR$Restriction_Speed_MPH, 2763)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 840 + sigma_sq_2 / 2763)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 840)
sample2 <- sample(FebSR$Restriction_Speed_MPH, 2763)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 840 + sigma_sq_2 / 2763)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 840)
sample2 <- sample(FebSR$Restriction_Speed_MPH, 2763)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 840 + sigma_sq_2 / 2763)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 840)
sample2 <- sample(FebSR$Restriction_Speed_MPH, 2763)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 840 + sigma_sq_2 / 2763)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 840)
sample2 <- sample(FebSR$Restriction_Speed_MPH, 2763)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 840 + sigma_sq_2 / 2763)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 840)
sample2 <- sample(FebSR$Restriction_Speed_MPH, 2763)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 840 + sigma_sq_2 / 2763)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 2241)
sample2 <- sample(FebSR$Restriction_Speed_MPH, 7369)
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 2241)
sample2 <- sample(AprSR$Restriction_Speed_MPH, 7369)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2241 + sigma_sq_2 / 7369)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
library(distributions3)
sample1 <- sample(JanSR$Restriction_Speed_MPH, 2241)
sample2 <- sample(AprSR$Restriction_Speed_MPH, 7369)
SR.mean.1 <- mean(sample1)
SR.mean.2 <- mean(sample2)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2241 + sigma_sq_2 / 7369)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- (1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))) / 2
p.value
# box plot for restriction distance in both months
library(reshape2)
installed.packages("reshape2")
install.packages("reshape2")
# box plot for restriction distance in both months
library(reshape2)
All.plot + geom_boxplot(aes(x = Calendar_Date, y = Restriction_Speed_MPH,
group = cut(Calendar_Date, breaks = "2 weeks"))) +
xlab("Date") +
ylab("Restriction Speed (mph)")
pnorm(AllSR$Restriction_Speed_MPH)
qqnorm(AllSR$Restriction_Speed_MPH)
qqline(AllSR$Restriction_Speed_MPH)
qqnorm(JanSR$Restriction_Speed_MPH)
qqline(JanSR$Restriction_Speed_MPH)
# Chunk 2: import_data
# import the data sets for January through April
library(readr)
library(dplyr)
JanSR <- read_csv("Speed_Restrictions_by_Day/2023-01_Speed_Restrictions_By_Day.csv")
FebSR <- read_csv("Speed_Restrictions_by_Day/2023-02_Speed_Restrictions_By_Day.csv")
MarSR <- read_csv("Speed_Restrictions_by_Day/2023-03_Speed_Restrictions_By_Day.csv")
AprSR <- read_csv("Speed_Restrictions_by_Day/2023-04_Speed_Restrictions_By_Day.csv")
# remove characters from restriction speed column and convert to numeric
JanSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(JanSR$Restriction_Speed_MPH)) %>%
as.numeric(JanSR$Restriction_Speed_MPH)
FebSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(FebSR$Restriction_Speed_MPH)) %>%
as.numeric(FebSR$Restriction_Speed_MPH)
MarSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(MarSR$Restriction_Speed_MPH)) %>%
as.numeric(MarSR$Restriction_Speed_MPH)
AprSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(AprSR$Restriction_Speed_MPH)) %>%
as.numeric(AprSR$Restriction_Speed_MPH)
# Create data set for all four months
AllSR <- rbind(JanSR, FebSR, MarSR, AprSR)
# Chunk 3: Figure_1.1
#load packages
library(ggplot2)
library(scales)
ggplot(AllSR) +
geom_histogram(aes(Calendar_Date, Restriction_Distance_Miles, fill = Line), stat = "identity") +
xlab("Month") +
ylab("Restriction Distance in Miles") +
scale_y_continuous(breaks = seq(0, 40, 5)) +
scale_fill_manual(values=c("darkblue", "darkgreen", "darkorange", "darkred"))
# Chunk 4: section_1.2
# Plot bar graph for Line, Location Type, and Restriction Reason
ggplot(AllSR) +
geom_bar(aes(Branch, fill = Restriction_Reason), stat = "count") +
scale_x_discrete(guide = guide_axis(n.dodge = 3)) +
scale_y_continuous(breaks = seq(0, 7000, 500)) +
ylab("Count") +
guides(fill=guide_legend(title="Restriction Reason"))
# Chunk 5: restriction_speed_summary_data
library(distributions3)
SR.mean.1 <- mean(JanSR$Restriction_Speed_MPH)
SR.mean.2 <- mean(AprSR$Restriction_Speed_MPH)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2801 + sigma_sq_2 / 9211)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- cdf(Z, -abs(z_stat))
p.value
# Chunk 6: Figure_2.1
# box plot for restriction distance in both months
library(reshape2)
library(ggplot2)
ggplot(AllSR) +
geom_boxplot(aes(x = Calendar_Date, y = Restriction_Speed_MPH,
group = cut(Calendar_Date, breaks = "2 weeks"))) +
xlab("Date") +
ylab("Restriction Speed (mph)")
# Chunk 7: restriction_distance_summary_data
SR.mean.1 <- mean(JanSR$Restriction_Distance_Miles)
SR.mean.2 <- mean(AprSR$Restriction_Distance_Miles)
sigma_sq_1 <- sd(JanSR$Restriction_Distance_Miles)**2
sigma_sq_2 <- sd(AprSR$Restriction_Distance_Miles)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2801 + sigma_sq_2 / 9211)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- cdf(Z, -abs(z_stat))
p.value
# Chunk 8: Figure_2.2
# barplot for restriction distance in both months
ggplot(AllSR) +
geom_boxplot(aes(x = Calendar_Date, y = Restriction_Distance_Miles,
group = cut(Calendar_Date, breaks = "2 weeks"))) +
xlab("Date") +
ylab("Restriction Distance (Miles)")
# Chunk 9: Figure_3.1
# Create linear regression model
All.plot + geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles), method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# fit regression model
SR.model <- lm(Restriction_Speed_MPH ~ Restriction_Distance_Miles, AllSR)
# residual plot
ggplot(SR.model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Fitted vs. Residual")
# Q-Q plot
All.plot + stat_qq(aes(sample = Restriction_Distance_Miles)) +
stat_qq_line(aes(sample = Restriction_Distance_Miles)) +
labs(title = "Q-Q Plot")
# Chunk 10: Regression_Coefficients
summary(lm(formula = Restriction_Distance_Miles ~ Restriction_Speed_MPH, AllSR))
# Chunk 11: chi-square_test
chisq.test(AllSR$Location_Description, AllSR$Restriction_Speed_MPH, correct = FALSE)
# Chunk 12: Figure_4.1
# Density plot of max restriction speed per branch in January and February
ggplot(AllSR) +
geom_point(aes(Location_Description, Branch, size = Restriction_Speed_MPH, color = Restriction_Speed_MPH)) +
scale_size_area(max_size = 4) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("Location") +
guides(color = FALSE)
# Density plot of max restriction speed per branch in January and February
ggplot(AllSR) +
geom_point(aes(Location_Description, Branch, size = Restriction_Speed_MPH, color = Restriction_Speed_MPH)) +
scale_size_area(max_size = 4) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("Location") +
guides(color = "none")
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# fit regression model
SR.model <- lm(Restriction_Speed_MPH ~ Restriction_Distance_Miles, AllSR)
# residual plot
ggplot(SR.model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Fitted vs. Residual")
# Q-Q plot
ggplot(AllSR) + stat_qq(aes(sample = Restriction_Distance_Miles)) +
stat_qq_line(aes(sample = Restriction_Distance_Miles)) +
labs(title = "Q-Q Plot")
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# fit regression model
SR.model <- lm(Restriction_Speed_MPH ~ Restriction_Distance_Miles, AllSR)
# residual plot
ggplot(SR.model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Fitted vs. Residual")
# Q-Q plot
ggplot(AllSR) + stat_qq(aes(sample = Restriction_Distance_Miles)) +
stat_qq_line(aes(sample = Restriction_Distance_Miles)) +
labs(title = "Q-Q Plot")
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# Plot bar graph for Line, Location Type, and Restriction Reason
ggplot(AllSR) +
geom_bar(aes(Branch, fill = Restriction_Reason), stat = "count") +
scale_x_discrete(guide = guide_axis(n.dodge = 3)) +
scale_y_continuous(breaks = seq(0, 7000, 500)) +
ylab("Count") +
guides(fill=guide_legend(title="Restriction Reason"))
# Density plot of max restriction speed per branch in January and February
ggplot(AllSR) +
geom_point(aes(Location_Description, Branch, size = Restriction_Speed_MPH, color = Restriction_Speed_MPH)) +
scale_size_area(max_size = 4) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("Location") +
guides(color = "none")
knitr::opts_chunk$set(echo = TRUE)
Z <- Normal(0, 1)  # make a standard normal r.v.
library(distributions3)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- cdf(Z, -abs(z_stat))
p.value
library(distributions3)
SR.mean.1 <- mean(JanSR$Restriction_Speed_MPH)
SR.mean.2 <- mean(AprSR$Restriction_Speed_MPH)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2801 + sigma_sq_2 / 9211)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- cdf(Z, -abs(z_stat))
p.value
library(distributions3)
SR.mean.1 <- mean(JanSR$Restriction_Speed_MPH)
SR.mean.2 <- mean(AprSR$Restriction_Speed_MPH)
sigma_sq_1 <- sd(JanSR$Restriction_Speed_MPH)**2
sigma_sq_2 <- sd(AprSR$Restriction_Speed_MPH)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2801 + sigma_sq_2 / 9211)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- pnorm(z_stat)
p.value
SR.mean.1 <- mean(JanSR$Restriction_Distance_Miles)
SR.mean.2 <- mean(AprSR$Restriction_Distance_Miles)
sigma_sq_1 <- sd(JanSR$Restriction_Distance_Miles)**2
sigma_sq_2 <- sd(AprSR$Restriction_Distance_Miles)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2801 + sigma_sq_2 / 9211)
Z <- Normal(0, 1)  # make a standard normal r.v.
p.value <- pnorm(z_stat)
p.value
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
library(ggplot2)
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# fit regression model
SR.model <- lm(Restriction_Speed_MPH ~ Restriction_Distance_Miles, AllSR)
# residual plot
ggplot(SR.model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Fitted vs. Residual")
# Q-Q plot
ggplot(AllSR) + stat_qq(aes(sample = Restriction_Distance_Miles)) +
stat_qq_line(aes(sample = Restriction_Distance_Miles)) +
labs(title = "Q-Q Plot")
library(ggplot2)
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# import the data sets for January through April
library(readr)
library(dplyr)
JanSR <- read_csv("Speed_Restrictions_by_Day/2023-01_Speed_Restrictions_By_Day.csv")
FebSR <- read_csv("Speed_Restrictions_by_Day/2023-02_Speed_Restrictions_By_Day.csv")
MarSR <- read_csv("Speed_Restrictions_by_Day/2023-03_Speed_Restrictions_By_Day.csv")
AprSR <- read_csv("Speed_Restrictions_by_Day/2023-04_Speed_Restrictions_By_Day.csv")
# remove characters from restriction speed column and convert to numeric
JanSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(JanSR$Restriction_Speed_MPH)) %>%
as.numeric(JanSR$Restriction_Speed_MPH)
FebSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(FebSR$Restriction_Speed_MPH)) %>%
as.numeric(FebSR$Restriction_Speed_MPH)
MarSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(MarSR$Restriction_Speed_MPH)) %>%
as.numeric(MarSR$Restriction_Speed_MPH)
AprSR$Restriction_Speed_MPH <- gsub(" mph","", as.character(AprSR$Restriction_Speed_MPH)) %>%
as.numeric(AprSR$Restriction_Speed_MPH)
# Create data set for all four months
AllSR <- rbind(JanSR, FebSR, MarSR, AprSR)
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# fit regression model
SR.model <- lm(Restriction_Speed_MPH ~ Restriction_Distance_Miles, AllSR)
# residual plot
ggplot(SR.model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Fitted vs. Residual")
# Q-Q plot
ggplot(AllSR) + stat_qq(aes(sample = Restriction_Distance_Miles)) +
stat_qq_line(aes(sample = Restriction_Distance_Miles)) +
labs(title = "Q-Q Plot")
#load packages
library(ggplot2)
library(scales)
ggplot(AllSR) +
geom_histogram(aes(Calendar_Date, Restriction_Distance_Miles, fill = Line), stat = "identity") +
xlab("Month") +
ylab("Restriction Distance in Miles") +
scale_y_continuous(breaks = seq(0, 40, 5)) +
scale_fill_manual(values=c("darkblue", "darkgreen", "darkorange", "darkred"))
# Plot bar graph for Line, Location Type, and Restriction Reason
ggplot(AllSR) +
geom_bar(aes(Branch, fill = Restriction_Reason), stat = "count") +
scale_x_discrete(guide = guide_axis(n.dodge = 3)) +
scale_y_continuous(breaks = seq(0, 7000, 500)) +
ylab("Count") +
guides(fill=guide_legend(title="Restriction Reason"))
SR.mean.1 <- mean(JanSR$Restriction_Distance_Miles)
SR.mean.2 <- mean(AprSR$Restriction_Distance_Miles)
sigma_sq_1 <- sd(JanSR$Restriction_Distance_Miles)**2
sigma_sq_2 <- sd(AprSR$Restriction_Distance_Miles)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2801 + sigma_sq_2 / 9211)
p.value <- pnorm(z_stat)
p.value
# barplot for restriction distance in both months
ggplot(AllSR) +
geom_boxplot(aes(x = Calendar_Date, y = Restriction_Distance_Miles,
group = cut(Calendar_Date, breaks = "2 weeks"))) +
xlab("Date") +
ylab("Restriction Distance (Miles)")
SR.mean.1 <- mean(JanSR$Restriction_Distance_Miles)
SR.mean.2 <- mean(AprSR$Restriction_Distance_Miles)
sigma_sq_1 <- sd(JanSR$Restriction_Distance_Miles)**2
sigma_sq_2 <- sd(AprSR$Restriction_Distance_Miles)**2
z_stat <- (SR.mean.1 - SR.mean.2) /
sqrt(sigma_sq_1 / 2801 + sigma_sq_2 / 9211)
p.value <- pnorm(z_stat)
p.value
# barplot for restriction distance in both months
ggplot(AllSR) +
geom_boxplot(aes(x = Calendar_Date, y = Restriction_Distance_Miles,
group = cut(Calendar_Date, breaks = "2 weeks"))) +
xlab("Date") +
ylab("Restriction Distance (Miles)")
# box plot for restriction distance in both months
library(reshape2)
library(ggplot2)
ggplot(AllSR) +
geom_boxplot(aes(x = Calendar_Date, y = Restriction_Speed_MPH,
group = cut(Calendar_Date, breaks = "2 weeks"))) +
xlab("Date") +
ylab("Restriction Speed (mph)")
# Density plot of max restriction speed per branch in January and February
ggplot(AllSR) +
geom_point(aes(Location_Description, Branch, size = Restriction_Speed_MPH, color = Restriction_Speed_MPH)) +
scale_size_area(max_size = 4) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab("Location") +
guides(color = "none")
# barplot for restriction distance in both months
ggplot(AllSR) +
geom_boxplot(aes(x = Calendar_Date, y = Restriction_Distance_Miles,
group = cut(Calendar_Date, breaks = "2 weeks"))) +
xlab("Date") +
ylab("Restriction Distance (Miles)")
# Create linear regression model
ggplot(AllSR) +
geom_point(aes(Restriction_Speed_MPH, Restriction_Distance_Miles)) +
geom_smooth(aes(Restriction_Speed_MPH, Restriction_Distance_Miles),
method = "lm", formula = y~x) +
xlab("Restriction Speed (mph)") +
ylab("Restriction Distance in Miles") +
labs(title = "Restriction Speed vs. Restriction Distance") +
scale_x_continuous(breaks = seq(0, 25, 1))
# fit regression model
SR.model <- lm(Restriction_Speed_MPH ~ Restriction_Distance_Miles, AllSR)
# residual plot
ggplot(SR.model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Fitted vs. Residual")
# Q-Q plot
ggplot(AllSR) + stat_qq(aes(sample = Restriction_Distance_Miles)) +
stat_qq_line(aes(sample = Restriction_Distance_Miles)) +
labs(title = "Q-Q Plot")
# residual plot
ggplot(SR.model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Fitted vs. Residual")
summary(lm(formula = Restriction_Distance_Miles ~ Restriction_Speed_MPH, AllSR))
View(AllSR)
